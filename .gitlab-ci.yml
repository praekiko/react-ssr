image: node:8.11.3-alpine
variables:
  TZ: Asia/Bangkok

stages:
- test
- build
- docker
# - deploy

.workflow-branches: &workflow_branches
- master
# - dev

test:
  stage: test
  only: *workflow_branches
  cache:
    paths:
      - node_modules
  script:
  - npm prune
  - npm install
  - npm run lint
  # - npm run flow
  # - NODE_ENV=test npm run test

build:
  stage: build
  only: *workflow_branches
  cache:
    paths:
      - node_modules
  script:
  - npm prune
  - npm install
  - npm run build
  artifacts:
    expire_in: 30 min
    paths:
    - dist

docker:
  stage: docker
  only: *workflow_branches
  image: docker:stable
  services:
  - docker:dind
  variables:
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CONTAINER_IMAGE:latest || true
    # - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_COMMIT_REF_SLUG --tag $CONTAINER_IMAGE:latest .
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_PIPELINE_ID --tag $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:$CI_PIPELINE_ID
    - docker push $CONTAINER_IMAGE:latest

deploy_dev:
  stage: deploy
  script:
    - echo "Deploy to dev app"
  environment:
    name: dev
    url: https://dev.example.com
  only:
  - dev

deploy_staging:
  stage: deploy
  script:
    - echo "Deploy to staging app"
  environment:
    name: staging
    url: https://staging.example.com
  only:
  - master

deploy_prod:
  stage: deploy
  script:
    - echo "Deploy to production app"
  environment:
    name: production
    url: https://example.com
  when: manual
  only:
  - master